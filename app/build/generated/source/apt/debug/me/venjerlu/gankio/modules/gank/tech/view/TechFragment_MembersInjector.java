// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package me.venjerlu.gankio.modules.gank.tech.view;

import dagger.MembersInjector;
import javax.inject.Provider;
import me.venjerlu.gankio.modules.gank.common.TypePresenter;
import me.venjerlu.gankio.modules.gank.tech.adapter.TechAdapter;

public final class TechFragment_MembersInjector implements MembersInjector<TechFragment> {
  private final Provider<TypePresenter<ITechView>> mPresenterProvider;

  private final Provider<TechAdapter> mAdapterProvider;

  public TechFragment_MembersInjector(
      Provider<TypePresenter<ITechView>> mPresenterProvider,
      Provider<TechAdapter> mAdapterProvider) {
    assert mPresenterProvider != null;
    this.mPresenterProvider = mPresenterProvider;
    assert mAdapterProvider != null;
    this.mAdapterProvider = mAdapterProvider;
  }

  public static MembersInjector<TechFragment> create(
      Provider<TypePresenter<ITechView>> mPresenterProvider,
      Provider<TechAdapter> mAdapterProvider) {
    return new TechFragment_MembersInjector(mPresenterProvider, mAdapterProvider);
  }

  @Override
  public void injectMembers(TechFragment instance) {
    if (instance == null) {
      throw new NullPointerException("Cannot inject members into a null reference");
    }
    me.venjerlu.gankio.common.fragment.BaseListFragment_MembersInjector.injectMPresenter(
        instance, mPresenterProvider);
    me.venjerlu.gankio.common.fragment.BaseListFragment_MembersInjector.injectMAdapter(
        instance, mAdapterProvider);
  }
}
