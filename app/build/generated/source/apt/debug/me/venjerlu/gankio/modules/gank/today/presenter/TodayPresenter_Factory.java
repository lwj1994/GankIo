// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package me.venjerlu.gankio.modules.gank.today.presenter;

import dagger.MembersInjector;
import dagger.internal.Factory;
import dagger.internal.MembersInjectors;
import javax.inject.Provider;
import me.venjerlu.gankio.common.http.GankApi;

public final class TodayPresenter_Factory implements Factory<TodayPresenter> {
  private final MembersInjector<TodayPresenter> todayPresenterMembersInjector;

  private final Provider<GankApi> apiProvider;

  public TodayPresenter_Factory(
      MembersInjector<TodayPresenter> todayPresenterMembersInjector,
      Provider<GankApi> apiProvider) {
    assert todayPresenterMembersInjector != null;
    this.todayPresenterMembersInjector = todayPresenterMembersInjector;
    assert apiProvider != null;
    this.apiProvider = apiProvider;
  }

  @Override
  public TodayPresenter get() {
    return MembersInjectors.injectMembers(
        todayPresenterMembersInjector, new TodayPresenter(apiProvider.get()));
  }

  public static Factory<TodayPresenter> create(
      MembersInjector<TodayPresenter> todayPresenterMembersInjector,
      Provider<GankApi> apiProvider) {
    return new TodayPresenter_Factory(todayPresenterMembersInjector, apiProvider);
  }
}
