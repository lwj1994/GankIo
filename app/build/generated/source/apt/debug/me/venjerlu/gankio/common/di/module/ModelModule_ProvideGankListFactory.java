// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package me.venjerlu.gankio.common.di.module;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import java.util.List;
import me.venjerlu.gankio.modules.gank.model.Gank;

public final class ModelModule_ProvideGankListFactory implements Factory<List<Gank>> {
  private final ModelModule module;

  public ModelModule_ProvideGankListFactory(ModelModule module) {
    assert module != null;
    this.module = module;
  }

  @Override
  public List<Gank> get() {
    return Preconditions.checkNotNull(
        module.provideGankList(), "Cannot return null from a non-@Nullable @Provides method");
  }

  public static Factory<List<Gank>> create(ModelModule module) {
    return new ModelModule_ProvideGankListFactory(module);
  }

  /** Proxies {@link ModelModule#provideGankList()}. */
  public static List<Gank> proxyProvideGankList(ModelModule instance) {
    return instance.provideGankList();
  }
}
